using System.Diagnostics.Contracts;
using JetBrains.Annotations;

namespace Test
{
    internal class Class
    {
        [ContractClass(typeof(AbstractClassContract))]
        internal abstract class AbstractClass
        {
            [NotNull]
            internal abstract string AbstractMethod{caret}<T, U>() where T : class where U : new();
        }

        [ContractClassFor(typeof(AbstractClass))]
        private abstract class AbstractClassContract : AbstractClass
        {
          internal override string AbstractMethod<T, U>() where T : class where U : new()
          {
            Contract.Ensures(Contract.Result<string>() != null);
            
            return default(string);
          }
        }
    }
}